[
	{
		"testsuite" : "Test get sensing values",
		"testcases" :	[
			{
				"name"				: "listdevices",
				"description" 		: "Get list of available devices in the controller",
				"input" 			: {
					"devicetype"	: "zwave"
				}
			},
            
			{
				"name" : "get_battery",
				"description" 		: "Get Battery level",
				"input" : {
					"devicetype" 	: "zwave",
					"id" 			: "D_ID",
					"class"			: "BATTERY",
					"readcommand"	: "GET"
				}
			},

			{
				"name" 				: "get_temperature",
				"description"		: "Get status of TEMP ( temperature in fahrenheit and celsius ) for verifying value which is available",
				"input" 			: {
					"devicetype" 	: "zwave",
					"id" 			: "D_ID",
					"class"			: "SENSOR_MULTILEVEL",
					"readcommand"	: "GET",
					"type"			: "TEMP",
					"force"			: "1"
				},
				"verdict"		: {
					"method"		: "reference",
					"value"		: {
						"fahrenheit"	: "ref",
						"celsius"		: "ref"
					},
                    "diff"      :   0.1
				}
			},

			{
				"name" 				: "get_humidity",
				"description"		: "Get status of HUMI ( humidity percentage and absolute humidity ) for verifying value which is available",
				"input" 			: {
					"devicetype" 	: "zwave",
					"id" 			: "D_ID",
					"class"			: "SENSOR_MULTILEVEL",
					"readcommand"	: "GET",
					"type"			: "HUMI",
					"force"			: "1"
				},
				"verdict"		: {
					"method"		: "reference",
					"value"		: {
						"percentage"		: "ref",
						"absolute_humidity"	: "ref"
					},
                    "diff"      :   0.1
				}
			},

			{
				"name" 				: "get_luminance",
				"description"		: "Get status of LUMI ( luminance index ) for verifying value which is available",
				"input" 			: {
					"devicetype" 	: "zwave",
					"id" 			: "D_ID",
					"class"			: "SENSOR_MULTILEVEL",
					"readcommand"	: "GET",
					"type"			: "LUMI",
					"force"			: "1"
				},
				"verdict"		: {
					"method"	: "reference",
					"value"		: {
						"luminance"	: "ref"
					},
                    "diff"      :   0.1
				}
			}
		]
	},

	{
        "testsuite" : "Test association with another device",
        "testcases" : [
            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test pre-association (auto alarms)",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "basic_set_association",
                "description"       : "Association with our controller (ceres)",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "ASSOCIATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "ONOFF_GROUP",
                    "data1"         : "01",
                    "data2"         : "1",
                    "type"          : "ONOFF_GROUP",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "nodefollow"    : ["01"]
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test association with controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "basic_set_association",
                "description"       : "Association with Led zwave device",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "ASSOCIATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "ONOFF_GROUP",
                    "data1"         : "8F",
                    "data2"         : "1",
                    "type"          : "ONOFF_GROUP",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "nodefollow"    : ["8F"]
                    }
                }
            },

            {
                "name"              : "time_configuration",
                "description"       : "Set TIME is 1, value 1 means the interval associated device to keep state On before sending it Off command.",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "TIME",
                    "data1"         : "1",
                    "data2"         : "1",
                    "type"          : "TIME",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 1
                    }
                }
            },

            {
                "name"              : "motion_configuration",
                "description"       : "Set ENABLE_MOTION is 1, value 1 mean to enable motion sensor",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "ENABLE_MOTION",
                    "data1"         : "1",
                    "data2"         : "1",
                    "type"          : "ENABLE_MOTION",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value" :     1
                    }
                }
            },
        
            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test association and alarm report, after 1s (there is no triggered motion) then device will send basic set command to associated device everytime detect motion.",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            }
        ]
    },

	{
		"testsuite" : "Test enable motion configuration",
		"testcases" : [

            {
                "name" 				: "motion_configuration",
                "description"		: "Set ENABLE_MOTION is 0, value 0 mean to disable motion sensor",
                "input" 			: {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"	: "SET",
                    "readcommand"   : "GET",
                    "data0"         : "ENABLE_MOTION",
                    "data1"         : "0",
                    "data2"         : "1",
                    "type"          : "ENABLE_MOTION",
                    "force"			: "1"
                },
				"verdict"		: {
					"method"		: "expectation",
					"value"		: {
						"value"	:     0
					}
				}
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test disable motion sensor",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name" 				: "motion_configuration",
                "description"		: "Set ENABLE_MOTION is 1, value 1 mean to enable motion sensor",
                "input" 			: {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"	: "SET",
                    "readcommand"   : "GET",
                    "data0"         : "ENABLE_MOTION",
                    "data1"         : "1",
                    "data2"         : "1",
                    "type"          : "ENABLE_MOTION",
                    "force"			: "1"
                },
				"verdict"		: {
					"method"		: "expectation",
					"value"		: {
						"value"	:     1
					}
				}
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test enable motion sensor",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            }
		]
	},

    {
        "testsuite" : "Test time delay configuration",
        "testcases" : [
            {
                "name"              : "time_configuration",
                "description"       : "Set TIME is 15300, value 15300 mean interval associated device to keep state On before sending it Off command.",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "TIME",
                    "data1"         : "15300",
                    "data2"         : "1",
                    "type"          : "TIME",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 15300
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 30s to test time delay configuration",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "30"
                }
            },

            {
                "name"              : "time_configuration",
                "description"       : "Set TIME is 10, value 10 mean interval associated device to keep state On before sending it Off command.",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "TIME",
                    "data1"         : "10",
                    "data2"         : "1",
                    "type"          : "TIME",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 10
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test time delay configuration",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            }
        ]
    },
	
    {
        "testsuite" : "Test report sensor and time auto report configuration",
        "testcases" : [
            {
                "name"              : "time_auto_report_configuration",
                "description"       : "Set TIME_AUTO_REPORT to 5 , value 5 means after 5s device will send reports which have been set before to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "TIME_AUTO_REPORT",
                    "data1"         : "5",
                    "data2"         : "1",
                    "type"          : "TIME_AUTO_REPORT",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 5
                    }
                }
            },

            {
                "name"              : "report_configuration",
                "description"       : "Set REPORT_SENSOR to 225 (HEX : E1,Binary : 11100001), value 225 means enable all reports (temperature+humidity+luminance+ultraviolet+battery) will send to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "REPORT_SENSOR",
                    "data1"         : "225",
                    "data2"         : "1",
                    "type"          : "REPORT_SENSOR",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 225
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test time auto report (5s) and report sensor configuration ",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "report_configuration",
                "description"       : "Set REPORT_SENSOR to 129 (HEX : Binary : 10000001), value 129 means enable luminance+battery reports that will send to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "REPORT_SENSOR",
                    "data1"         : "129",
                    "data2"         : "1",
                    "type"          : "REPORT_SENSOR",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 129
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test reports configuration ",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "report_configuration",
                "description"       : "Set REPORT_SENSOR to 0, value 0 means disable all reports will send to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "REPORT_SENSOR",
                    "data1"         : "0",
                    "data2"         : "1",
                    "type"          : "REPORT_SENSOR",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 0
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test reports configuration ",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "report_configuration",
                "description"       : "Set REPORT_SENSOR to 192 (HEX : E1, Binary : 11000000), value 192 means enable humidity+luminance reports which will send to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "REPORT_SENSOR",
                    "data1"         : "192",
                    "data2"         : "1",
                    "type"          : "REPORT_SENSOR",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 192
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 60s to test reports configuration ",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "60"
                }
            },

            {
                "name"              : "time_auto_report_configuration",
                "description"       : "Set TIME_AUTO_REPORT to 2678400 , value 2678400 means after 2678400s device will send reports which have been set before to controller",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "CONFIGURATION",
                    "writecommand"  : "SET",
                    "readcommand"   : "GET",
                    "data0"         : "TIME_AUTO_REPORT",
                    "data1"         : "2678400",
                    "data2"         : "1",
                    "type"          : "TIME_AUTO_REPORT",
                    "force"         : "1"
                },
                "verdict"       : {
                    "method"        : "expectation",
                    "value"     : {
                        "value"         : 2678400
                    }
                }
            },

            {
                "name"              : "physical_test",
                "description"       : "Wait for 30s to test tima auto reports (2678400s) configuration ",
                "input"             : {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "time"          : "30"
                }
            }
        ]
    },

	{
		"testsuite" : "Test remove association information",
		"testcases" : [
			{
                "name" 				: "remove_association",
                "description"		: "Remove our controller out of ONOFF_GROUP",
                "input" 			: {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "ASSOCIATION",
                    "writecommand"	: "REMOVE",
                    "readcommand"   : "GET",
                    "data0"         : "ONOFF_GROUP",
                    "data1"         : "01",
                    "data2"         : "1",
                    "type"          : "ONOFF_GROUP",
                    "force"			: "1"
                },
				"verdict"		: {
					"method"		: "expectation",
					"value"		: {
						"nodefollow"	: ["01"]
					}
				}
            },

            {
                "name" 				: "remove_association",
                "description"		: "Remove zwave LED out of ONOFF_GROUP",
                "input" 			: {
                    "devicetype"    : "zwave",
                    "id"            : "D_ID",
                    "class"         : "ASSOCIATION",
                    "writecommand"	: "REMOVE",
                    "readcommand"   : "GET",
                    "data0"         : "ONOFF_GROUP",
                    "data1"         : "8F",
                    "data2"         : "1",
                    "type"          : "ONOFF_GROUP",
                    "force"			: "1"
                },
				"verdict"		: {
					"method"		: "expectation",
					"value"		: {
						"nodefollow"	: ["8F"]
					}
				}
            }
		]
	}
]
